#notes.rb
As a market, I can create, edit, or delete any Vendor

  def update
    @myvendor = Vendor.find(params[:id])
    if @myvendor.update({name: params[:vendor][:name], num_employees: params[:vendor][:num_employees]})
    @myvendor.save
    redirect_to markets_show_path(@myvendor.id)
    else
      render "edit"
    end
    if @myvendor == nil
      render :file => 'public/404.html', :status => :not_found
    end
  end







  <%=button_to("delete vendor", vendors_destroy_path(vendor.id), method: :destroy)%>
1. Found this arrangement to display all City's in one place with all of their details. Instead I'm going to focus only simply showing a link with name on it. then once you click on it will show you more details.
<div>
  <ul>
    <% @markets.each do |market| %>
    <%=  link_to(market.name,show_path(market.id))%>
    <li>Market Name: <%=market[:name]  %></li>
    <li>Address: <%=market.address %></li>
    <li>City: <%=market.city %></li>
    <li>County: <%=market.county %></li>
    <li>State: <%=market.state %></li>
    <li>Zip: <%=market.zip %></li>
  </ul>
  <% end %>
</div>

<!-- <div>
 <ul>
   <%= @markets.each do |market| %>
   <li>Market Name: <%=market[:name]  %></li>
   <li>Address: <%=market.address %></li>
   <li>City: <%=market.city %></li>
   <li>County: <%=market.county %></li>
   <li>State: <%=market.state %></li>
   <li>Zip: <%=market.zip %></li>
 </ul>
 <% end %>
</div>
<%= link_to(market.name,show_path(market.id))%>

<%= " #{market.city}, #{market.state}"  %></p>
<%= "#"  %>
<% end %> -->
Showing
note sure why!

 /Users/trishgriego/ada/week9/FarMarRails/app/views/markets/show.html.erb where line #8 raised:

undefined method `[]' for nil:NilClass


  <!-- <h1>Guest User<%=link_to(guests_index_path) %></h1> -->
